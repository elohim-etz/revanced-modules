name: CI

on:
  schedule:
    - cron: "0 */6 * * *" # every 6 hours
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      SHOULD_BUILD: ${{ steps.should_build.outputs.SHOULD_BUILD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest patch pre-release
        id: get_patch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LATEST_TAG=$(gh api repos/anddea/revanced-patches/releases \
            --jq '.[0].tag_name')
          LATEST_TAG=${LATEST_TAG#v}
          echo "LATEST_PATCH=$LATEST_TAG" >> $GITHUB_ENV
          echo "Latest upstream patch: $LATEST_TAG"

      - name: Get current patch version from last release
        id: get_current
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BODY=$(gh api repos/${{ github.repository }}/releases --jq '.[0].body' || true)

          if [[ -z "$BODY" ]]; then
            echo "No previous release found. First build."
            echo "CURRENT_PATCH=none" >> $GITHUB_ENV
          else
            LINE=$(echo "$BODY" | grep '^Patches:' || true)
            CUR=$(echo "$BODY" | grep -Po 'anddea/patches-\K[^ ]+(?=\.rvp)' | head -n1 || true)

            if [[ -z "$CUR" ]]; then
              CUR=none
            fi

            CUR=$(echo "$CUR" | tr -d '\r\n')
            echo "CURRENT_PATCH=$CUR" >> $GITHUB_ENV
            echo "Current patch in last release: $CUR"
          fi

      - name: Should build?
        id: should_build
        run: |
          if [[ "$CURRENT_PATCH" == "none" ]]; then
            echo "No patch version recorded. Buiding..."
            echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
          elif [[ "$LATEST_PATCH" != "$CURRENT_PATCH" ]]; then
            echo "New patch detected: $LATEST_PATCH (current: $CURRENT_PATCH)"
            echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
          else
            echo "No new patch. Skipping build."
            echo "SHOULD_BUILD=0" >> $GITHUB_OUTPUT
          fi

      - name: Clear older runs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run list -L400 --json databaseId -q '.[].databaseId' | tail -n+10 | \
          xargs -IID gh api "repos/$GITHUB_REPOSITORY/actions/runs/ID" -X DELETE || :

  build:
    needs: check
    if: ${{ needs.check.outputs.SHOULD_BUILD == '1' }}
    uses: ./.github/workflows/build.yml
    permissions: write-all
    secrets: inherit
    with:
      from_ci: true
